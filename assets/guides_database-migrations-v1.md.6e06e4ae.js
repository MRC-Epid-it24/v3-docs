import{_ as s,c as a,o as n,a as o}from"./app.309a8d3d.js";const g=JSON.parse('{"title":"Database migrations V1","description":"","frontmatter":{},"headers":[{"level":2,"title":"Database configuration","slug":"database-configuration","link":"#database-configuration","children":[]},{"level":2,"title":"Running migration scripts","slug":"running-migration-scripts","link":"#running-migration-scripts","children":[]}],"relativePath":"guides/database-migrations-v1.md"}'),t={name:"guides/database-migrations-v1.md"},e=o(`<h1 id="database-migrations-v1" tabindex="-1">Database migrations V1 <a class="header-anchor" href="#database-migrations-v1" aria-hidden="true">#</a></h1><p>Intake24 uses a custom SQL database migration system that keeps the database structure in sync with the code changes.</p><h2 id="database-configuration" tabindex="-1">Database configuration <a class="header-anchor" href="#database-configuration" aria-hidden="true">#</a></h2><p>The database migration tools are not based on Play Framework and require separate database configuration files. The configuration directory is excepted to contain the following three files:</p><ul><li>development-database-config.json</li><li>production-database-config.json</li><li>test-database-config.json</li></ul><p>that contain the database connection configuration for the local development database, the main production database and the test (staging) server database.</p><p>The connection configuration is described using the following format:</p><div class="language-json"><button class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">host</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">localhost</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">useSsl</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">database</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">intake24_system</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">intake24</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">password</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">intake24</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>The password field should contain either an empty array (<code>[]</code>) for no password or an array with a single string.</p><p>The configuration files for <code>food</code> and <code>system</code> databases should be in two separate directories.</p><h2 id="running-migration-scripts" tabindex="-1">Running migration scripts <a class="header-anchor" href="#running-migration-scripts" aria-hidden="true">#</a></h2><p>The most straightforward way of running the migration tools is to use <code>sbt</code> from the root of the backend (<a href="https://github.com/intake24/api-server" target="_blank" rel="noreferrer">api-server</a>) repository.</p><p>In order to apply the migration scripts for the <strong>system database</strong>, run:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">sbt </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">databaseTools/runMain uk.ac.ncl.openlab.intake24.sql.tools.system MigrateSystemDatabase --db-config-dir [path to system database config dir]</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>In order to apply the migration scripts for the <strong>food database</strong>, run:</p><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">sbt </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">databaseTools/runMain uk.ac.ncl.openlab.intake24.sql.tools.food.MigrateFoodDatabase --db-config-dir [path to food database config dir]</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div>`,16),l=[e];function p(r,i,c,d,D,u){return n(),a("div",null,l)}const F=s(t,[["render",p]]);export{g as __pageData,F as default};
